server:
  port: 8081

# 개발 환경 설정
spring:
  application:
    name: macchain-backend-dev
  
  # H2 메모리 데이터베이스 (개발용)
  datasource:
    url: jdbc:h2:mem:devdb
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: none  # 스키마 파일 사용
    show-sql: true  # 개발 시 SQL 로깅 활성화
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  sql:
    init:
      mode: always
      schema-locations: classpath:schema-dev.sql
      data-locations: classpath:data-dev.sql
      continue-on-error: false
  
  # 개발용 간단한 캐시 (Redis 없이)
  cache:
    type: simple
    cache-names:
      - mccheyne-plans
      - user-progress
      - user-statistics
  
  # MongoDB와 Redis 비활성화 (개발용)
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.mongodb.MongoDataAutoConfiguration
      - org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

# OpenAI API 설정 (개발용 - 더 짧은 타임아웃)
openai:
  api-key: ${OPENAI_API_KEY:your-openai-api-key-here}
  model: gpt-4
  max-tokens: 1000  # 개발용으로 줄임
  temperature: 0.7
  timeout: 10000  # 10초 타임아웃

# 로깅 설정 (개발용 - 더 자세한 로그)
logging:
  level:
    com.macchain: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.cache: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
  endpoint:
    health:
      show-details: always
