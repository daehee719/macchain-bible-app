server:
  port: 8082

# 테스트 환경 설정
spring:
  application:
    name: macchain-backend-test
  
  # H2 파일 데이터베이스 (테스트용 - 데이터 유지)
  datasource:
    url: jdbc:h2:file:./testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: update  # 테스트 데이터 유지
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: false
  
  sql:
    init:
      mode: always
      data-locations: classpath:data-test.sql
      continue-on-error: false
  
  # 테스트용 MongoDB (로컬)
  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DB:macchain_test}
  
  # 테스트용 Redis (로컬)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 1  # 테스트용 DB 1번 사용
      timeout: 2000ms
  
  # 테스트용 캐시
  cache:
    type: redis
    redis:
      time-to-live: 1800000  # 30분
      cache-null-values: false
    cache-names:
      - mccheyne-plans
      - user-progress
      - user-statistics

# OpenAI API 설정 (테스트용)
openai:
  api-key: ${OPENAI_API_KEY:your-openai-api-key-here}
  model: gpt-4
  max-tokens: 1500
  temperature: 0.7
  timeout: 15000  # 15초 타임아웃

# 로깅 설정 (테스트용)
logging:
  level:
    com.macchain: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: INFO

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
