server:
  port: 8080

# 운영 환경 설정
spring:
  application:
    name: macchain-backend-prod
  
  # PostgreSQL 데이터베이스 (운영용)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/macchain_prod}
    username: ${DATABASE_USERNAME:macchain}
    password: ${DATABASE_PASSWORD:macchain}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate  # 운영에서는 validate만
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 20
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        jdbc.lob:
          non_contextual_creation: true
    open-in-view: false
  
  # 운영용 MongoDB
  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DB:macchain_prod}
      username: ${MONGODB_USERNAME:}
      password: ${MONGODB_PASSWORD:}
  
  # 운영용 Redis
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: -1ms
  
  # 운영용 캐시
  cache:
    type: redis
    redis:
      time-to-live: 3600000  # 1시간
      cache-null-values: false
    cache-names:
      - mccheyne-plans
      - user-progress
      - user-statistics

# OpenAI API 설정 (운영용)
openai:
  api-key: ${OPENAI_API_KEY}
  model: gpt-4
  max-tokens: 2000
  temperature: 0.7
  timeout: 30000  # 30초 타임아웃

# 로깅 설정 (운영용 - 최소한의 로그)
logging:
  level:
    com.macchain: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
    root: WARN

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never
