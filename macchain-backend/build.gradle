plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'checkstyle'
    id 'org.owasp.dependencycheck' version '8.4.3'
}

group = 'com.macchain'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    
    // Database
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = '10.12.4'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    ignoreFailures = false
    maxWarnings = 0
}

tasks.named('checkstyleMain') {
    reports {
        xml.required = false
        html.required = true
    }
}

tasks.named('checkstyleTest') {
    reports {
        xml.required = false
        html.required = true
    }
}

dependencyCheck {
    format = 'ALL'
    suppressionFile = 'config/dependency-check/suppressions.xml'
    failBuildOnCVSS = 7
    analyzers {
        assemblyEnabled = false
        msbuildEnabled = false
        nuspecEnabled = false
        nodeEnabled = false
        nodeAuditEnabled = false
        retirejsEnabled = false
        rubygemsEnabled = false
        swiftEnabled = false
        cocoapodsEnabled = false
        autoconfEnabled = false
        cmakeEnabled = false
        composerEnabled = false
        nuspecEnabled = false
        nugetconfEnabled = false
        nexusEnabled = false
        ossIndexEnabled = false
    }
}
